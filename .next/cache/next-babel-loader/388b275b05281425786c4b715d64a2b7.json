{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, getCartError, updateCartSuccess, updateCartError } from './action';\nimport { addItemToCartHelper, decreaseQtyCartItemHelper, getCartItemsFromCookies, increaseQtyCartItemHelper, removeCartItemHelper } from '~/utilities/ecomerce-helpers';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Success',\n    description: 'This product has been added to your cart!',\n    duration: 1\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Remove A Item',\n    description: 'This product has been removed from your cart!',\n    duration: 1\n  });\n};\n\nfunction* getCartSaga() {\n  try {\n    const cartItems = getCartItemsFromCookies();\n    yield put(updateCartSuccess(cartItems));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* addItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const cartItems = addItemToCartHelper(product);\n    yield put(updateCartSuccess(cartItems));\n    modalSuccess('success');\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* removeItemSaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const cartItems = removeCartItemHelper(product);\n    yield put(updateCartSuccess(cartItems));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* increaseQtySaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const cartItems = increaseQtyCartItemHelper(product);\n    yield put(updateCartSuccess(cartItems));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n  try {\n    const {\n      product\n    } = payload;\n    const cartItems = decreaseQtyCartItemHelper(product);\n    yield put(updateCartSuccess(cartItems));\n  } catch (err) {\n    yield put(getCartError(err));\n  }\n}\n\nfunction* clearCartSaga() {\n  try {\n    const emptyCart = {\n      cartItems: null\n    };\n    yield put(updateCartSuccess(emptyCart));\n  } catch (err) {\n    yield put(updateCartError(err));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n  yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n  yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n}","map":{"version":3,"sources":["/home/onizuka/Bureau/Projects/StandOut/store/cart/saga.js"],"names":["all","put","takeEvery","notification","actionTypes","getCartError","updateCartSuccess","updateCartError","addItemToCartHelper","decreaseQtyCartItemHelper","getCartItemsFromCookies","increaseQtyCartItemHelper","removeCartItemHelper","modalSuccess","type","message","description","duration","modalWarning","getCartSaga","cartItems","err","addItemSaga","payload","product","removeItemSaga","increaseQtySaga","decreaseItemQtySaga","clearCartSaga","emptyCart","rootSaga","GET_CART","ADD_ITEM","REMOVE_ITEM","INCREASE_QTY","DECREASE_QTY"],"mappings":"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","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport {\n    actionTypes,\n    getCartError,\n    updateCartSuccess,\n    updateCartError,\n} from './action';\nimport {\n    addItemToCartHelper,\n    decreaseQtyCartItemHelper,\n    getCartItemsFromCookies,\n    increaseQtyCartItemHelper,\n    removeCartItemHelper,\n} from '~/utilities/ecomerce-helpers';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Success',\n        description: 'This product has been added to your cart!',\n        duration: 1,\n    });\n};\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Remove A Item',\n        description: 'This product has been removed from your cart!',\n        duration: 1,\n    });\n};\n\nfunction* getCartSaga() {\n    try {\n        const cartItems = getCartItemsFromCookies();\n        yield put(updateCartSuccess(cartItems));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* addItemSaga(payload) {\n    try {\n        const { product } = payload;\n        const cartItems = addItemToCartHelper(product);\n        yield put(updateCartSuccess(cartItems));\n        modalSuccess('success');\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* removeItemSaga(payload) {\n    try {\n        const { product } = payload;\n\n        const cartItems = removeCartItemHelper(product);\n        yield put(updateCartSuccess(cartItems));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* increaseQtySaga(payload) {\n    try {\n        const { product } = payload;\n        const cartItems = increaseQtyCartItemHelper(product);\n        yield put(updateCartSuccess(cartItems));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* decreaseItemQtySaga(payload) {\n    try {\n        const { product } = payload;\n        const cartItems = decreaseQtyCartItemHelper(product);\n        yield put(updateCartSuccess(cartItems));\n    } catch (err) {\n        yield put(getCartError(err));\n    }\n}\n\nfunction* clearCartSaga() {\n    try {\n        const emptyCart = {\n            cartItems: null,\n        };\n        yield put(updateCartSuccess(emptyCart));\n    } catch (err) {\n        yield put(updateCartError(err));\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.GET_CART, getCartSaga)]);\n    yield all([takeEvery(actionTypes.ADD_ITEM, addItemSaga)]);\n    yield all([takeEvery(actionTypes.REMOVE_ITEM, removeItemSaga)]);\n    yield all([takeEvery(actionTypes.INCREASE_QTY, increaseQtySaga)]);\n    yield all([takeEvery(actionTypes.DECREASE_QTY, decreaseItemQtySaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}