{"ast":null,"code":"import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, updateWishlistListSuccess } from './action';\nimport { addItemToWishlistHelper, getWishListFromCookies, removeCartItemHelper, removeItemFromWishlist } from '~/utilities/ecomerce-helpers';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Added to wishlisht!',\n    description: 'This product has been added to wishlist!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Removed from wishlist',\n    description: 'This product has been removed from wishlist!'\n  });\n};\n\nfunction* getWishlistListSaga() {\n  try {\n    const items = getWishListFromCookies();\n    yield put(updateWishlistListSuccess(items));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* addItemToWishlistSaga({\n  product\n}) {\n  try {\n    const wishlistItems = addItemToWishlistHelper(product);\n    yield put(updateWishlistListSuccess(wishlistItems));\n    modalSuccess('success');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* removeItemWishlistSaga({\n  product\n}) {\n  try {\n    const wishlistItems = removeItemFromWishlist(product);\n    yield put(updateWishlistListSuccess(wishlistItems));\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* clearWishlistListSaga() {\n  try {\n    const emptyCart = {\n      wishlistItems: [],\n      wishlistTotal: 0\n    };\n    yield put(updateWishlistListSuccess(emptyCart));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.GET_WISHLIST_LIST, getWishlistListSaga)]);\n  yield all([takeEvery(actionTypes.ADD_ITEM_WISHLISH, addItemToWishlistSaga)]);\n  yield all([takeEvery(actionTypes.REMOVE_ITEM_WISHLISH, removeItemWishlistSaga)]);\n}","map":{"version":3,"sources":["/home/onizuka/Bureau/Projects/StandOut/store/wishlist/saga.js"],"names":["all","put","takeEvery","notification","actionTypes","updateWishlistListSuccess","addItemToWishlistHelper","getWishListFromCookies","removeCartItemHelper","removeItemFromWishlist","modalSuccess","type","message","description","modalWarning","getWishlistListSaga","items","err","console","log","addItemToWishlistSaga","product","wishlistItems","removeItemWishlistSaga","clearWishlistListSaga","emptyCart","wishlistTotal","rootSaga","GET_WISHLIST_LIST","ADD_ITEM_WISHLISH","REMOVE_ITEM_WISHLISH"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,WAAT,EAAsBC,yBAAtB,QAAuD,UAAvD;AACA,SACIC,uBADJ,EAEIC,sBAFJ,EAGIC,oBAHJ,EAIIC,sBAJJ,QAKO,8BALP;;AAOA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC3BR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,qBADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,MAAMC,YAAY,GAAIH,IAAD,IAAU;AAC3BR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,uBADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,UAAUE,mBAAV,GAAgC;AAC5B,MAAI;AACA,UAAMC,KAAK,GAAGT,sBAAsB,EAApC;AACA,UAAMN,GAAG,CAACI,yBAAyB,CAACW,KAAD,CAA1B,CAAT;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAED,UAAUG,qBAAV,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA6C;AACzC,MAAI;AACA,UAAMC,aAAa,GAAGhB,uBAAuB,CAACe,OAAD,CAA7C;AACA,UAAMpB,GAAG,CAACI,yBAAyB,CAACiB,aAAD,CAA1B,CAAT;AACAZ,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAJD,CAIE,OAAOO,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAED,UAAUM,sBAAV,CAAiC;AAAEF,EAAAA;AAAF,CAAjC,EAA8C;AAC1C,MAAI;AACA,UAAMC,aAAa,GAAGb,sBAAsB,CAACY,OAAD,CAA5C;AACA,UAAMpB,GAAG,CAACI,yBAAyB,CAACiB,aAAD,CAA1B,CAAT;AACAR,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAJD,CAIE,OAAOG,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAED,UAAUO,qBAAV,GAAkC;AAC9B,MAAI;AACA,UAAMC,SAAS,GAAG;AACdH,MAAAA,aAAa,EAAE,EADD;AAEdI,MAAAA,aAAa,EAAE;AAFD,KAAlB;AAIA,UAAMzB,GAAG,CAACI,yBAAyB,CAACoB,SAAD,CAA1B,CAAT;AACH,GAND,CAME,OAAOR,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AAED,eAAe,UAAUU,QAAV,GAAqB;AAChC,QAAM3B,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACwB,iBAAb,EAAgCb,mBAAhC,CAAV,CAAD,CAAT;AACA,QAAMf,GAAG,CAAC,CACNE,SAAS,CAACE,WAAW,CAACyB,iBAAb,EAAgCT,qBAAhC,CADH,CAAD,CAAT;AAGA,QAAMpB,GAAG,CAAC,CACNE,SAAS,CAACE,WAAW,CAAC0B,oBAAb,EAAmCP,sBAAnC,CADH,CAAD,CAAT;AAGH","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, updateWishlistListSuccess } from './action';\nimport {\n    addItemToWishlistHelper,\n    getWishListFromCookies,\n    removeCartItemHelper,\n    removeItemFromWishlist,\n} from '~/utilities/ecomerce-helpers';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Added to wishlisht!',\n        description: 'This product has been added to wishlist!',\n    });\n};\n\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Removed from wishlist',\n        description: 'This product has been removed from wishlist!',\n    });\n};\n\nfunction* getWishlistListSaga() {\n    try {\n        const items = getWishListFromCookies();\n        yield put(updateWishlistListSuccess(items));\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* addItemToWishlistSaga({ product }) {\n    try {\n        const wishlistItems = addItemToWishlistHelper(product);\n        yield put(updateWishlistListSuccess(wishlistItems));\n        modalSuccess('success');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* removeItemWishlistSaga({ product }) {\n    try {\n        const wishlistItems = removeItemFromWishlist(product);\n        yield put(updateWishlistListSuccess(wishlistItems));\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* clearWishlistListSaga() {\n    try {\n        const emptyCart = {\n            wishlistItems: [],\n            wishlistTotal: 0,\n        };\n        yield put(updateWishlistListSuccess(emptyCart));\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.GET_WISHLIST_LIST, getWishlistListSaga)]);\n    yield all([\n        takeEvery(actionTypes.ADD_ITEM_WISHLISH, addItemToWishlistSaga),\n    ]);\n    yield all([\n        takeEvery(actionTypes.REMOVE_ITEM_WISHLISH, removeItemWishlistSaga),\n    ]);\n}\n"]},"metadata":{},"sourceType":"module"}