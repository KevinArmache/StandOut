{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/onizuka/Bureau/Projects/StandOut/components/elements/menu/Menu.jsx\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport MegaMenu from \"./MegaMenu\";\nimport MenuDropdown from \"./MenuDropdown\";\n\nconst Menu = ({\n  data,\n  className\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  className: className,\n  children: data && data.map(item => {\n    if (item.subMenu) {\n      return /*#__PURE__*/_jsxDEV(MenuDropdown, {\n        menuData: item\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 18\n      }, this);\n    } else if (item.megaContent) {\n      return /*#__PURE__*/_jsxDEV(MegaMenu, {\n        menuData: item\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.type === \"dynamic\" ? /*#__PURE__*/_jsxDEV(Link, {\n          href: `${item.url}/[pid]`,\n          as: `${item.url}/${item.endPoint}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          href: item.url,\n          as: item.alias,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    }\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\nexport default Menu;","map":{"version":3,"sources":["/home/onizuka/Bureau/Projects/StandOut/components/elements/menu/Menu.jsx"],"names":["React","Link","MegaMenu","MenuDropdown","Menu","data","className","map","item","subMenu","text","megaContent","type","url","endPoint","alias"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,kBACX;AAAI,EAAA,SAAS,EAAEA,SAAf;AAAA,YACGD,IAAI,IACHA,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AACjB,QAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,0BAAO,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAED;AAAxB,SAAmCA,IAAI,CAACE,IAAxC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAIF,IAAI,CAACG,WAAT,EAAsB;AAC3B,0BAAO,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEH;AAApB,SAA+BA,IAAI,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,kBACGF,IAAI,CAACI,IAAL,KAAc,SAAd,gBACC,QAAC,IAAD;AACE,UAAA,IAAI,EAAG,GAAEJ,IAAI,CAACK,GAAI,QADpB;AAEE,UAAA,EAAE,EAAG,GAAEL,IAAI,CAACK,GAAI,IAAGL,IAAI,CAACM,QAAS,EAFnC;AAAA,iCAIE;AAAA,sBAAIN,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBADD,gBAQC,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEF,IAAI,CAACK,GAAjB;AAAsB,UAAA,EAAE,EAAEL,IAAI,CAACO,KAA/B;AAAA,iCACE;AAAA,sBAAIP,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATJ,SAASF,IAAI,CAACE,IAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD;AACF,GAvBD;AAFJ;AAAA;AAAA;AAAA;AAAA,QADF;;AA8BA,eAAeN,IAAf","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\n\nimport MegaMenu from \"./MegaMenu\";\nimport MenuDropdown from \"./MenuDropdown\";\n\nconst Menu = ({ data, className }) => (\n  <ul className={className}>\n    {data &&\n      data.map((item) => {\n        if (item.subMenu) {\n          return <MenuDropdown menuData={item} key={item.text} />;\n        } else if (item.megaContent) {\n          return <MegaMenu menuData={item} key={item.text} />;\n        } else {\n          return (\n            <li key={item.text}>\n              {item.type === \"dynamic\" ? (\n                <Link\n                  href={`${item.url}/[pid]`}\n                  as={`${item.url}/${item.endPoint}`}\n                >\n                  <a>{item.text}</a>\n                </Link>\n              ) : (\n                <Link href={item.url} as={item.alias}>\n                  <a>{item.text}</a>\n                </Link>\n              )}\n            </li>\n          );\n        }\n      })}\n  </ul>\n);\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}