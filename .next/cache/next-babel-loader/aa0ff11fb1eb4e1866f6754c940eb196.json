{"ast":null,"code":"import Repository, { baseUrlProduct } from './Repository';\n\nclass CollectionRepository {\n  constructor(callback) {\n    this.callback = callback;\n  }\n\n  async getProductsByCollectionSlug(slug) {\n    const reponse = await Repository.get(`${baseUrlProduct}/collections?slug_in=${slug}`).then(response => {\n      if (response.data && response.data.length > 0) {\n        return {\n          items: response.data[0].products\n        };\n      } else {\n        return null;\n      }\n\n      return response.data;\n    }).catch(error => {\n      console.log(JSON.stringify(error));\n      return null;\n    });\n    return reponse;\n  }\n\n}\n\nexport default new CollectionRepository();","map":{"version":3,"sources":["/home/onizuka/Bureau/Templates/React/themeforest-ekfrwlJp-supro-minimalist-ecommerce-reactjs-template/supro_react_package_1_0_0/supro-react/supro-react/repositories/CollectionRepository.js"],"names":["Repository","baseUrlProduct","CollectionRepository","constructor","callback","getProductsByCollectionSlug","slug","reponse","get","then","response","data","length","items","products","catch","error","console","log","JSON","stringify"],"mappings":"AAAA,OAAOA,UAAP,IAAqBC,cAArB,QAA2C,cAA3C;;AAEA,MAAMC,oBAAN,CAA2B;AACvBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAED,QAAMC,2BAAN,CAAkCC,IAAlC,EAAwC;AACpC,UAAMC,OAAO,GAAG,MAAMP,UAAU,CAACQ,GAAX,CACjB,GAAEP,cAAe,wBAAuBK,IAAK,EAD5B,EAGjBG,IAHiB,CAGXC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAA5C,EAA+C;AAC3C,eAAO;AAAEC,UAAAA,KAAK,EAAEH,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBG;AAA1B,SAAP;AACH,OAFD,MAEO;AACH,eAAO,IAAP;AACH;;AACD,aAAOJ,QAAQ,CAACC,IAAhB;AACH,KAViB,EAWjBI,KAXiB,CAWVC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAZ;AACA,aAAO,IAAP;AACH,KAdiB,CAAtB;AAeA,WAAOT,OAAP;AACH;;AAtBsB;;AAyB3B,eAAe,IAAIL,oBAAJ,EAAf","sourcesContent":["import Repository, { baseUrlProduct } from './Repository';\n\nclass CollectionRepository {\n    constructor(callback) {\n        this.callback = callback;\n    }\n\n    async getProductsByCollectionSlug(slug) {\n        const reponse = await Repository.get(\n            `${baseUrlProduct}/collections?slug_in=${slug}`\n        )\n            .then((response) => {\n                if (response.data && response.data.length > 0) {\n                    return { items: response.data[0].products };\n                } else {\n                    return null;\n                }\n                return response.data;\n            })\n            .catch((error) => {\n                console.log(JSON.stringify(error));\n                return null;\n            });\n        return reponse;\n    }\n}\n\nexport default new CollectionRepository();\n"]},"metadata":{},"sourceType":"module"}